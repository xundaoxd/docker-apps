#!/usr/bin/env bash

self_path=$(realpath "${BASH_SOURCE[0]:-$0}")
self_dir=$(dirname "$self_path")
proj_dir=$(dirname "$self_dir")
current_dir="$(realpath "$PWD")"
home_dir="$(realpath "$HOME")"

die() {
    echo "$@"
    exit 255
}

base() {
    if [[ $PWD != $HOME/* ]]; then
        die "Please run docker app in home dir!!!"
    fi

    opt="--network host \
        -u $(id -u):$(id -g) \
        -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e LANG -e GTK_IM_MODULE=xim -e QT_IM_MODULE=xim -e XMODIFIERS"

    [[ -e $home_dir/.Xauthority ]] && opt="$opt -v $home_dir/.Xauthority:$HOME/.Xauthority:ro"
    opt="$opt -v $proj_dir/.home:$HOME"
    for f in $home_dir/*; do
        [[ $f != $current_dir* ]] && opt="$opt -v $f:$HOME/$(basename $f):ro"
    done
    opt="$opt -v $current_dir:$PWD -w $PWD"

    echo docker run $opt "$@"
    docker run $opt "$@"
}


mllab() {
    base -ti --rm --gpus all xundaoxd/ml:latest "$@"
}
ipython() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        ipython "$@"
}
jupyter() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        jupyter lab --no-browser --NotebookApp.token='' "$@"
}

# obsidian() {
#     base -d --rm --gpus all xundaoxd/obsidian obsidian --no-sandbox "$@"
# }

octave() {
    base -d --rm --gpus all xundaoxd/ml:latest \
        octave --gui "$@"
}

rclone() {
    base -ti --rm xundaoxd/ml:latest \
        rclone "$@"
}

main() {
    self=$(basename $0)
    $self "$@"
}

main "$@"

