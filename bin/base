#!/usr/bin/env bash

self_path=$(realpath $0)
bin_path=$(dirname $self_path)
docker_path=$(dirname $bin_path)

docker_opt=""
base_opt() {
    opt="-u $(id -u):$(id -g) \
        -v $docker_path/.home:$HOME \
        -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e XDG_RUNTIME_DIR -v $XDG_RUNTIME_DIR:$XDG_RUNTIME_DIR \
        -e LANG -e GTK_IM_MODULE=xim -e QT_IM_MODULE=xim -e XMODIFIERS"
    if [ -e $HOME/.Xauthority ]; then
        opt="$opt \
        -v $HOME/.Xauthority:$HOME/.Xauthority:ro"
    fi
    docker_opt="$docker_opt \
        $opt"
}

cwd_opt() {
    if [[ $PWD == $HOME/* ]]; then
        docker_opt="$docker_opt \
            -v $(realpath $PWD):$PWD -w $PWD"
    else
        exit -1
    fi
}

base() {
    base_opt
    cwd_opt
    docker run --network host $docker_opt "$@"
}

# nodejs
node() {
    base -ti --rm node:latest node "$@"
}
npm() {
    base -ti --rm node:latest npm "$@"
}
yarn() {
    base -ti --rm node:latest yarn "$@"
}
npx() {
    base -ti --rm node:latest npx "$@"
}

# java
java() {
    base -ti --rm openjdk:latest java "$@"
}
javac() {
    base -ti --rm openjdk:latest javac "$@"
}

# go
go() {
    base -ti --rm --gpus all xundaoxd/ml:latest go "$@"
}

# cuda
mllab() {
    base -ti --rm --gpus all xundaoxd/ml:latest "$@"
}
nvcc() {
    base -ti --rm --gpus all xundaoxd/ml:latest nvcc "$@"
}
nvdisasm() {
    base -ti --rm --gpus all xundaoxd/ml:latest nvdisasm "$@"
}
cuobjdump() {
    base -ti --rm --gpus all xundaoxd/ml:latest cuobjdump "$@"
}
cmake() {
    base -ti --rm --gpus all xundaoxd/ml:latest cmake "$@"
}
bazel() {
    base -ti --rm --gpus all xundaoxd/ml:latest bazel "$@"
}
ipython() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        ipython "$@"
}
jupyter() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        jupyter lab --no-browser "$@"
}


# others
xelatex() {
    base -ti --rm texlive/texlive:latest \
        xelatex "$@"
}
obsidian() {
    base -d --rm --gpus all xundaoxd/obsidian obsidian --no-sandbox "$@"
}

main() {
    self=$(basename $0)
    $self "$@"
}

main "$@"
