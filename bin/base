#!/usr/bin/env bash

self_path=$(realpath $0)
bin_path=$(dirname $self_path)
docker_path=$(dirname $bin_path)

base_opt() {
    echo "-u $(id -u):$(id -g) \
    -h $(hostname) \
    -v $docker_path/.home:$HOME \
    -e LANG -e GTK_IM_MODULE=xim -e QT_IM_MODULE=xim -e XMODIFIERS"
}

cwd_opt() {
    if [[ $PWD != $HOME ]]; then
        echo "-v $PWD:$PWD -w $PWD"
    fi
}

base() {
    docker run --network host $(base_opt) $(cwd_opt) "$@"
}

# nodejs
node() {
    base -ti --rm node:latest node "$@"
}
npm() {
    base -ti --rm node:latest npm "$@"
}
yarn() {
    base -ti --rm node:latest yarn "$@"
}
npx() {
    base -ti --rm node:latest npx "$@"
}

# java
java() {
    base -ti --rm openjdk:latest java "$@"
}
javac() {
    base -ti --rm openjdk:latest javac "$@"
}

# go
go() {
    base -ti --rm --gpus all xundaoxd/base:latest go "$@"
}

# cuda
nvcc() {
    base -ti --rm --gpus all xundaoxd/base:latest nvcc "$@"
}
nvdisasm() {
    base -ti --rm --gpus all xundaoxd/base:latest nvdisasm "$@"
}
cuobjdump() {
    base -ti --rm --gpus all xundaoxd/base:latest cuobjdump "$@"
}

cmake() {
    base -ti --rm --gpus all xundaoxd/base:latest cmake "$@"
}
bazel() {
    base -ti --rm --gpus all xundaoxd/base:latest bazel --output_user_root=$PWD/.cache "$@"
}
ipython() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        ipython "$@"
}
octave() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        octave "$@"
}
mllab() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        bash "$@"
}
jupyter() {
    base -ti --rm --gpus all xundaoxd/ml:latest \
        jupyter lab --no-browser
}


# others
xelatex() {
    base -ti --rm texlive/texlive:latest \
        xelatex "$@"
}

main() {
    self=$(basename $0)
    $self "$@"
}

main "$@"
